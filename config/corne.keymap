/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <18 19 21 22 23 30 31 32 33 34 35 39 40 41 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 38 37 36>;
        };

        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE           &kp Q                  &kp W              &kp E                &kp R              &kp T                   &kp Y      &kp U               &kp I                 &kp O               &kp P                           &kp BACKSPACE
&kp ESCAPE          &hrm_l LEFT_CONTROL A  &hrm_l LEFT_ALT S  &hrm_l LEFT_SHIFT D  &hrm_l LEFT_GUI F  &kp G                   &kp H      &hrm_r RIGHT_GUI J  &hrm_r RIGHT_SHIFT K  &hrm_r RIGHT_ALT L  &hrm_r RIGHT_CONTROL SEMICOLON  &kp SQT
&mt LEFT_SHIFT TAB  &kp Z                  &kp X              &kp C                &kp V              &kp B                   &kp N      &kp M               &kp COMMA             &kp DOT             &kp FSLH                        &mt RIGHT_SHIFT ENTER
                                                              &kp LEFT_GUI         &mo 1              &mt LEFT_SHIFT ENTER    &kp SPACE  &mo 2               &mo 3
            >;
        };

        nav {
            bindings = <
&trans  &kp KP_DIVIDE                   &mt AMPERSAND NUMBER_7    &mt ASTERISK NUMBER_8  &mt LEFT_PARENTHESIS NUMBER_9  &kp KP_MINUS       &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &mt RIGHT_BRACKET LEFT_BRACKET  &kp MINUS     &kp EQUAL        &kp BACKSLASH  &kp DELETE
&trans  &kp KP_MULTIPLY                 &mt DOLLAR NUMBER_4       &mt PERCENT NUMBER_5   &mt CARET NUMBER_6             &kp LS(KP_PLUS)    &kp LEFT_ARROW                          &kp DOWN_ARROW                  &kp UP_ARROW  &kp RIGHT_ARROW  &trans         &trans
&trans  &mt RIGHT_PARENTHESIS NUMBER_0  &mt EXCLAMATION NUMBER_1  &mt AT_SIGN NUMBER_2   &mt HASH NUMBER_3              &trans             &trans                                  &trans                          &kp COMMA     &kp PERIOD       &kp SLASH      &trans
                                                                  &kp DOT                &trans                         &trans             &trans                                  &tog 2                          &tog 3
            >;
        };

        func {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6      &kp F7             &kp F8           &kp F9      &kp F10  &kp DEL
&trans  &kp F11  &kp F12  &trans  &trans  &trans    &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &trans   &trans
&trans  &trans   &trans   &trans  &trans  &trans    &trans      &trans             &trans           &trans      &trans   &trans
                          &trans  &trans  &trans    &kp C_MUTE  &trans             &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR  &bt BT_CLR_ALL  &trans         &trans         &trans         &trans           &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_NXT  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_PRV  &bt BT_DISC 0   &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &trans  &trans  &trans  &trans  &trans  &trans
                                           &trans         &trans         &trans           &trans  &trans  &trans
            >;
        };
    };
};
