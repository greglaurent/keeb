/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <39 40 41 38 37 0 1 2 3 4 12 13 14 15 16 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37>;
        };

        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE       &kp Q              &kp W              &kp E                &kp R           &kp T                     &kp Y          &kp U           &kp I                 &kp O               &kp P                       &kp DELETE
&kp ESCAPE      &hrm_l LEFT_GUI A  &hrm_l LEFT_ALT S  &hrm_l LEFT_SHIFT D  &hrm_l LCTRL F  &kp G                     &kp H          &hrm_r RCTRL J  &hrm_r RIGHT_SHIFT K  &hrm_r RIGHT_ALT L  &hrm_r RIGHT_GUI SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z              &kp X              &kp C                &kp V           &kp B                     &kp N          &kp M           &kp COMMA             &kp DOT             &kp FSLH                    &kp RIGHT_SHIFT
                                                      &mo 4                &mo 1           &hrm_l LEFT_GUI RETURN    &mt TAB SPACE  &mo 2           &mo 3
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &mt RIGHT_BRACKET LEFT_BRACKET  &kp MINUS     &kp EQUAL        &kp BACKSLASH  &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_ARROW                          &kp DOWN_ARROW                  &kp UP_ARROW  &kp RIGHT_ARROW  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans                                  &trans                          &kp COMMA     &kp PERIOD       &kp SLASH      &trans
                        &trans  &trans  &trans    &trans                                  &trans                          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp KP_DIVIDE                   &mt AMPERSAND NUMBER_7    &mt ASTERISK NUMBER_8           &mt LEFT_PARENTHESIS NUMBER_9  &kp ASTRK    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp KP_EQUAL                    &mt DOLLAR NUMBER_4       &mt PERCENT NUMBER_5            &mt CARET NUMBER_6             &kp MINUS    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mt RIGHT_PARENTHESIS NUMBER_0  &mt EXCLAMATION NUMBER_1  &mt AT_SIGN NUMBER_2            &mt HASH NUMBER_3              &kp PLUS     &trans  &trans  &trans  &trans  &trans  &trans
                                                                  &mt RIGHT_PARENTHESIS NUMBER_0  &kp KP_DOT                     &trans       &trans  &trans  &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        layer_4 {
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
