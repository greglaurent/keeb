/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <18 19 21 22 23 30 31 32 33 34 35 39 40 41 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            require-prior-idle-ms = <125>;
        };

        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            hold-trigger-on-release;
            require-prior-idle-ms = <125>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q               &kp W              &kp E                &kp R                  &kp T        &kp Y      &kp U                   &kp I                 &kp O               &kp P                       &kp BACKSPACE
&kp ESCAPE      &hrm_l LEFT_META A  &hrm_l LEFT_ALT S  &hrm_l LEFT_SHIFT D  &hrm_l LEFT_CONTROL F  &kp G        &kp H      &hrm_r RIGHT_CONTROL J  &hrm_r RIGHT_SHIFT K  &hrm_r RIGHT_ALT L  &hrm_r RIGHT_GUI SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z               &kp X              &kp C                &kp V                  &kp B        &kp N      &kp M                   &kp COMMA             &kp DOT             &kp FSLH                    &kp BACKSLASH
                                                       &kp DELETE           &mo 1                  &kp ENTER    &kp SPACE  &mo 2                   &mo 3
            >;
        };

        num_symbol {
            bindings = <
&kp GRAVE     &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4          &kp NUMBER_5      &kp NUMBER_6     &kp NUMBER_7               &kp NUMBER_8                 &kp NUMBER_9                 &kp NUMBER_0   &trans
&kp TAB       &kp LEFT_GUI    &kp LEFT_ALT  &kp LEFT_SHIFT    &kp LEFT_CONTROL      &trans            &kp LEFT_ARROW   &hrm_r RIGHT_CONTROL DOWN  &hrm_r RIGHT_SHIFT UP_ARROW  &hrm_r LEFT_ALT RIGHT_ARROW  &kp RIGHT_GUI  &trans
&kp CAPSLOCK  &kp UNDERSCORE  &kp MINUS     &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS      &kp RIGHT_BRACKET            &kp EQUAL                    &kp PLUS       &trans
                                            &trans            &trans                &trans            &trans           &trans                     &tog 3
            >;
        };

        func {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3           &kp F4    &kp F5           &kp F6            &kp F7             &kp F8           &kp F9      &kp F10  &trans
&trans  &trans  &trans  &kp PRINTSCREEN  &kp HOME  &kp PAGE_UP      &kp C_PREV        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &kp F11  &trans
&trans  &trans  &trans  &trans           &kp END   &kp PAGE_DOWN    &trans            &kp C_MUTE         &trans           &trans      &kp F12  &trans
                        &trans           &trans    &trans           &kp C_PLAY_PAUSE  &trans             &tog 3
            >;
        };

        bt {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR  &bt BT_CLR_ALL  &trans         &trans         &trans         &trans           &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_NXT  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_PRV  &bt BT_DISC 0   &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &trans  &trans  &trans  &trans  &trans  &trans
                                           &trans         &trans         &trans           &trans  &trans  &trans
            >;
        };
    };
};
